#.github/workflows/ci-cd-pipeline.yml
name: CI/CD Pipeline

permissions:
  contents: read   
  pull-requests: write  

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

  terraform-security-scan:
    name: Terraform Security Scan
    runs-on: ubuntu-latest
    needs: terraform-validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      

      - name: Run tfsec
        run: tfsec .

  terraform-lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    needs: terraform-validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install.sh | bash

      - name: Run TFLint
        run: tflint

  terraform-checkov:
    name: Terraform Checkov
    runs-on: ubuntu-latest
    needs: terraform-validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Checkov
        run: |
          pip install checkov

      - name: Run Checkov
        run: checkov -d .

  snyk-security-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    needs: terraform-validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        with:
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  juice-shop-tests:
    name: Juice Shop Tests
    runs-on: ubuntu-latest
    needs: snyk-security-scan

    steps:
      - name: Checkout your repository
        uses: actions/checkout@v2

      - name: Clone Juice Shop repository
        run: |
          git clone https://github.com/juice-shop/juice-shop.git
          cd juice-shop
          npm install

      - name: Run Juice Shop tests
        run: |
          cd juice-shop
          npm test

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [terraform-validate, terraform-lint, terraform-security-scan, terraform-checkov, snyk-security-scan, juice-shop-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Save Terraform Plan Output
        run: terraform plan -out=tfplan -var="bucket_name=my-terraform-bucket"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Show Terraform Plan
        run: terraform show -json tfplan | jq .

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="bucket_name=my-terraform-bucket"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  notify:
    name: Slack Notification
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "CI/CD Pipeline failed for ${{ github.repository }} on branch ${{ github.ref }} at job ${{ job.name }}."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
